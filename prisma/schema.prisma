generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model tb_role {
  roldId       Int            @id @default(autoincrement())
  authority    String         @db.VarChar(50)
  rolename     String         @db.VarChar(50)
  tb_user_role tb_user_role[]
}

model tb_user {
  userId                              Int            @id @default(autoincrement())
  profilePic String   @default("profile_default_img.jpeg")
  email                               String         @unique(map: "uniqueEmail") @db.VarChar(100)
  password                            String         @db.VarChar(100)
  username                            String         @db.VarChar(45)
  tb_room_tb_room_receiverIdTotb_user tb_room[]      @relation("tb_room_receiverIdTotb_user")
  tb_room_tb_room_senderIdTotb_user   tb_room[]      @relation("tb_room_senderIdTotb_user")
  tb_user_role                        tb_user_role[]
}

model tb_user_role {
  user_role_id Int     @id @default(autoincrement())
  userId       Int
  roldId       Int
  tb_role      tb_role @relation(fields: [roldId], references: [roldId], onDelete: NoAction, onUpdate: NoAction, map: "roldId")
  tb_user      tb_user @relation(fields: [userId], references: [userId], onDelete: NoAction, onUpdate: NoAction, map: "FK_tb_user_TO_tb_user_role_1")

  @@index([roldId], map: "roldId_idx")
  @@index([userId], map: "userId_idx")
}

model tb_message {
  messageId Int      @id @default(autoincrement())
  roomId    Int
  senderId  Int
  message   String   @db.Text
  createdAt DateTime @default(now()) @db.DateTime(0)
}

model tb_room {
  roomId                              Int       @id @default(autoincrement())
  senderId                            Int
  receiverId                          Int
  last_time                           DateTime? @db.DateTime(0)
  roomname                            String    @unique(map: "roomname_UNIQUE") @db.VarChar(100)
  last_message                        String?   @db.VarChar(50)
  tb_user_tb_room_receiverIdTotb_user tb_user   @relation("tb_room_receiverIdTotb_user", fields: [receiverId], references: [userId], onDelete: NoAction, onUpdate: NoAction, map: "receiverId")
  tb_user_tb_room_senderIdTotb_user   tb_user   @relation("tb_room_senderIdTotb_user", fields: [senderId], references: [userId], onDelete: NoAction, onUpdate: NoAction, map: "senderId")

  @@index([receiverId], map: "receiverId")
  @@index([senderId], map: "senderId")
}
